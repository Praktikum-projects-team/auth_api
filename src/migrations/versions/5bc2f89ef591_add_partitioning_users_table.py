"""add partitioning users table

Revision ID: 5bc2f89ef591
Revises: 24ec1405a840
Create Date: 2023-06-06 14:09:36.576210

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '5bc2f89ef591'
down_revision = '24ec1405a840'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('login_history', schema=None) as batch_op:
        batch_op.create_unique_constraint(None, ['id'])

    with op.batch_alter_table('roles', schema=None) as batch_op:
        batch_op.create_unique_constraint(None, ['id'])

    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.add_column(sa.Column('partition_id', sa.Integer(), nullable=False))
        batch_op.create_unique_constraint(None, ['id'])

    op.execute("""
        CREATE TABLE users_partitions (
        CHECK (partition_id >= 0 AND partition_id < 10)
        ) INHERITS (users);
        """)

    op.execute("""
        CREATE OR REPLACE FUNCTION users_insert_trigger() 
        RETURNS TRIGGER AS $$ 
        BEGIN 
        INSERT INTO users_partitions VALUES (NEW.*);
        RETURN NULL; 
        END; $$ 
        LANGUAGE plpgsql;
        """)

    op.execute("""
        CREATE TRIGGER insert_users_trigger 
        BEFORE INSERT ON users 
        FOR EACH ROW EXECUTE FUNCTION users_insert_trigger();
        """)

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='unique')
        batch_op.drop_column('partition_id')

    with op.batch_alter_table('roles', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='unique')

    with op.batch_alter_table('login_history', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='unique')

    # ### end Alembic commands ###
